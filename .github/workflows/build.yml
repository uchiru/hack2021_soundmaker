name: Build Image
on:
  push: {}
  workflow_dispatch: {}

jobs:
  build:
    env:
      REGISTRY: registry-awsuchi.runit.cc
      REGISTRY_CA_CRT:     '${{ secrets.REGISTRY_UCHI_CA_CRT }}'
      REGISTRY_CLIENT_CRT: '${{ secrets.REGISTRY_UCHI_CLIENT_CRT }}'
      REGISTRY_CLIENT_KEY: '${{ secrets.REGISTRY_UCHI_CLIENT_KEY }}'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup push secrets
        run: |
          sudo mkdir -p /etc/buildkit
          cat <<EOF | sudo tee /etc/buildkit/buildkitd.toml > /dev/null
          [registry."$REGISTRY"]
            ca=["/etc/docker/certs.d/$REGISTRY/ca.crt"]
            [[registry."$REGISTRY".keypair]]
              key="/etc/docker/certs.d/$REGISTRY/client.key"
              cert="/etc/docker/certs.d/$REGISTRY/client.cert"
          EOF

          sudo mkdir -p /etc/docker/certs.d/$REGISTRY/
          echo $REGISTRY_CA_CRT     | base64 -d | sudo tee /etc/docker/certs.d/$REGISTRY/ca.crt      >/dev/null
          echo $REGISTRY_CLIENT_CRT | base64 -d | sudo tee /etc/docker/certs.d/$REGISTRY/client.cert >/dev/null
          echo $REGISTRY_CLIENT_KEY | base64 -d | sudo tee /etc/docker/certs.d/$REGISTRY/client.key  >/dev/null

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          config: /etc/buildkit/buildkitd.toml

      - name: Calculate metadata
        id: meta
        run: |
          echo "::set-output name=name::$REGISTRY/${GITHUB_REPOSITORY#uchiru/}"
          if [ $GITHUB_EVENT_NAME = "schedule" ]; then
            echo "::set-output name=tag::periodic-$(date +%Y%m%d%H%M)-${GITHUB_SHA:0:8}"
          else
            echo "::set-output name=tag::$(echo ${GITHUB_REF#refs/heads/} | tr -s '[:punct:]' '-')-${GITHUB_RUN_NUMBER}-${GITHUB_SHA:0:8}"
          fi

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.name }}:${{ steps.meta.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max